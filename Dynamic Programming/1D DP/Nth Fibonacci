<-----------Recusive -------------->
    def fib(n):
      if n == 0: return 0
      if n == 1 or n = 2: return 1
      return fib(n-2) + fib(n-1)

<---------Memoized Recursion ----------->
    memo = {}
    def fib(n):
      if n in memo:
        return memo[n]
      memo[0],memo[1],memo[2] = 0,1,1
      memo[n] = fib(n-2) + fib(n-1)
      return memo[n]
    
<-------- Tabulation --------------->
    
    def fibonacci(self, n: int) -> int:
        # bottom up dp 
        # base cases
        if n == 0:
            return 0
        if n == 1 or n == 2:
            return 1

    dp = [0]*(n+1)
    dp[0] = 0
    dp[1] = 1
    dp[2] = 1
    for i in range(3,len(dp)):
        dp[i] = dp[i-1] + dp[i-2]
    
    return dp[n]
